{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"./shorten.pipe\";\nimport * as i4 from \"./filter.pipe\";\n\nfunction AppComponent_li_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 7)(1, \"span\", 8);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"strong\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"shorten\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"uppercase\");\n    i0.ɵɵpipe(8, \"date\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const server_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.getStatusClasses(server_r1));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", server_r1.status, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 5, server_r1.name, 15));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" | \", i0.ɵɵpipeBind1(7, 8, server_r1.instanceType), \" | \", i0.ɵɵpipeBind2(8, 10, server_r1.started, \"fullDate\"), \" \");\n  }\n}\n\nexport class AppComponent {\n  constructor() {\n    this.appStatus = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve('stable');\n      }, 2000);\n    });\n    this.servers = [{\n      instanceType: 'medium',\n      name: 'Production Server',\n      status: 'stable',\n      started: new Date(15, 1, 2017)\n    }, {\n      instanceType: 'large',\n      name: 'User Database',\n      status: 'stable',\n      started: new Date(15, 1, 2017)\n    }, {\n      instanceType: 'small',\n      name: 'Development Server',\n      status: 'offline',\n      started: new Date(15, 1, 2017)\n    }, {\n      instanceType: 'small',\n      name: 'Testing Environment Server',\n      status: 'stable',\n      started: new Date(15, 1, 2017)\n    }];\n    this.filteredStatus = '';\n  }\n\n  getStatusClasses(server) {\n    return {\n      'list-group-item-success': server.status === 'stable',\n      'list-group-item-warning': server.status === 'offline',\n      'list-group-item-danger': server.status === 'critical'\n    };\n  }\n\n  onAddServer() {\n    this.servers.push({\n      instanceType: 'small',\n      name: 'New Server',\n      status: 'stable',\n      started: new Date(15, 1, 2017)\n    });\n  }\n\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\n\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 16,\n  vars: 9,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col-xs-12\", \"col-sm-10\", \"col-md-8\", \"col-sm-offset-1\", \"col-md-offset-2\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"bg-primary\", 3, \"click\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\", 3, \"ngClass\"], [1, \"badge\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.filteredStatus = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"br\");\n      i0.ɵɵelementStart(5, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_5_listener() {\n        return ctx.onAddServer();\n      });\n      i0.ɵɵtext(6, \"Add Server\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"br\")(8, \"br\");\n      i0.ɵɵelementStart(9, \"h2\");\n      i0.ɵɵtext(10);\n      i0.ɵɵpipe(11, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"hr\");\n      i0.ɵɵelementStart(13, \"ul\", 5);\n      i0.ɵɵtemplate(14, AppComponent_li_14_Template, 9, 13, \"li\", 6);\n      i0.ɵɵpipe(15, \"filter\");\n      i0.ɵɵelementEnd()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.filteredStatus);\n      i0.ɵɵadvance(7);\n      i0.ɵɵtextInterpolate1(\"App Status: \", i0.ɵɵpipeBind1(11, 3, ctx.appStatus), \"\");\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(15, 5, ctx.servers, ctx.filteredStatus, \"status\"));\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgForOf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, i1.AsyncPipe, i1.UpperCasePipe, i1.DatePipe, i3.ShortenPipe, i4.FilterPipe],\n  styles: [\".container[_ngcontent-%COMP%] {\\n  margin-top: 50px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6ImFwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gIG1hcmdpbi10b3A6IDUwcHg7XG59XG4iXX0= */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IAUQA,8BAGuC,CAHvC,EAGuC,MAHvC,EAGuC,CAHvC;IAMIA;IACFA;IACAA;IAAQA;;IAA+BA;IAAUA;;;IAGnDA;;;;;;IAREA;IAGEA;IAAAA;IAEMA;IAAAA;IAAyCA;IAAAA;;;;ACX3D,OAAM,MAAOC,YAAP,CAAmB;EALzBC;IAME,iBAAY,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAoB;MAC1CC,UAAU,CAAC,MAAK;QACdF,OAAO,CAAC,QAAD,CAAP;MACD,CAFS,EAER,IAFQ,CAAV;IAGD,CAJW,CAAZ;IAKA,eAAU,CACR;MACEG,YAAY,EAAE,QADhB;MAEEC,IAAI,EAAE,mBAFR;MAGEC,MAAM,EAAE,QAHV;MAIEC,OAAO,EAAE,IAAIC,IAAJ,CAAS,EAAT,EAAa,CAAb,EAAgB,IAAhB;IAJX,CADQ,EAOR;MACEJ,YAAY,EAAE,OADhB;MAEEC,IAAI,EAAE,eAFR;MAGEC,MAAM,EAAE,QAHV;MAIEC,OAAO,EAAE,IAAIC,IAAJ,CAAS,EAAT,EAAa,CAAb,EAAgB,IAAhB;IAJX,CAPQ,EAaR;MACEJ,YAAY,EAAE,OADhB;MAEEC,IAAI,EAAE,oBAFR;MAGEC,MAAM,EAAE,SAHV;MAIEC,OAAO,EAAE,IAAIC,IAAJ,CAAS,EAAT,EAAa,CAAb,EAAgB,IAAhB;IAJX,CAbQ,EAmBR;MACEJ,YAAY,EAAE,OADhB;MAEEC,IAAI,EAAE,4BAFR;MAGEC,MAAM,EAAE,QAHV;MAIEC,OAAO,EAAE,IAAIC,IAAJ,CAAS,EAAT,EAAa,CAAb,EAAgB,IAAhB;IAJX,CAnBQ,CAAV;IA0BA,sBAAiB,EAAjB;EAmBD;;EAjBCC,gBAAgB,CAACC,MAAD,EAA4E;IAC1F,OAAO;MACL,2BAA2BA,MAAM,CAACJ,MAAP,KAAkB,QADxC;MAEL,2BAA2BI,MAAM,CAACJ,MAAP,KAAkB,SAFxC;MAGL,0BAA0BI,MAAM,CAACJ,MAAP,KAAkB;IAHvC,CAAP;EAKD;;EAEDK,WAAW;IACT,KAAKC,OAAL,CAAaC,IAAb,CAAkB;MAChBT,YAAY,EAAE,OADE;MAEhBC,IAAI,EAAE,YAFU;MAGhBC,MAAM,EAAE,QAHQ;MAIhBC,OAAO,EAAE,IAAIC,IAAJ,CAAS,EAAT,EAAY,CAAZ,EAAc,IAAd;IAJO,CAAlB;EAMD;;AAjDsB;;;mBAAZV;AAAY;;;QAAZA;EAAYgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDPzBrB,+BAAuB,CAAvB,EAAuB,KAAvB,EAAuB,CAAvB,EAAuB,CAAvB,EAAuB,KAAvB,EAAuB,CAAvB,EAAuB,CAAvB,EAAuB,OAAvB,EAAuB,CAAvB;MAGyBA;QAAA;MAAA;MAAnBA;MACAA;MACAA;MAA+BA;QAAA,OAASsB,iBAAT;MAAsB,CAAtB;MAAwBtB;MAAUA;MACjEA,sBAAI,CAAJ,EAAI,IAAJ;MACAA;MAAIA;;MAAmCA;MACvCA;MACAA;MACEA;;MAYFA;;;;MAnBmBA;MAAAA;MAIfA;MAAAA;MAKmBA;MAAAA","names":["i0","AppComponent","constructor","Promise","resolve","reject","setTimeout","instanceType","name","status","started","Date","getStatusClasses","server","onAddServer","servers","push","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/nataliiaodai/Documents/all/angular_pipes/src/app/app.component.html","/Users/nataliiaodai/Documents/all/angular_pipes/src/app/app.component.ts"],"sourcesContent":["<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\">\n      <input type=\"text\" [(ngModel)]=\"filteredStatus\">\n      <br>\n      <button class=\"btn bg-primary\" (click)=\"onAddServer()\">Add Server</button>\n      <br><br>\n      <h2>App Status: {{ appStatus | async }}</h2>\n      <hr>\n      <ul class=\"list-group\">\n        <li\n          class=\"list-group-item\"\n          *ngFor=\"let server of servers | filter:filteredStatus:'status'\"\n          [ngClass]=\"getStatusClasses(server)\">\n          <span\n            class=\"badge\">\n            {{ server.status }}\n          </span>\n          <strong>{{ server.name | shorten: 15 }}</strong> |\n          {{ server.instanceType | uppercase }} |\n          {{ server.started | date:'fullDate' }}\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  appStatus = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve('stable');\n    },2000);\n  });\n  servers = [\n    {\n      instanceType: 'medium',\n      name: 'Production Server',\n      status: 'stable',\n      started: new Date(15, 1, 2017)\n    },\n    {\n      instanceType: 'large',\n      name: 'User Database',\n      status: 'stable',\n      started: new Date(15, 1, 2017)\n    },\n    {\n      instanceType: 'small',\n      name: 'Development Server',\n      status: 'offline',\n      started: new Date(15, 1, 2017)\n    },\n    {\n      instanceType: 'small',\n      name: 'Testing Environment Server',\n      status: 'stable',\n      started: new Date(15, 1, 2017)\n    }\n  ];\n  filteredStatus = '';\n\n  getStatusClasses(server: {instanceType: string, name: string, status: string, started: Date}) {\n    return {\n      'list-group-item-success': server.status === 'stable',\n      'list-group-item-warning': server.status === 'offline',\n      'list-group-item-danger': server.status === 'critical'\n    };\n  }\n\n  onAddServer() {\n    this.servers.push({\n      instanceType: 'small',\n      name: 'New Server',\n      status: 'stable',\n      started: new Date(15,1,2017)\n    });\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}